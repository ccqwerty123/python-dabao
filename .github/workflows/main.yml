- name: Build EXEs
      if: steps.check_files.outputs.need_build == 'true'
      run: |
        $env:PYTHONPATH = "c:\hostedtoolcache\windows\python\3.8\x64"
        
        Get-Content to_build.txt | ForEach-Object {
          $py_name = $_.Trim()
          Write-Host "Building: $py_name"
          
          # 使用 here-string 时需要注意缩进和换行
          $spec_content = @'
# -*- mode: python ; coding: utf-8 -*-
block_cipher = None

a = Analysis(
    ["py/{0}.py"],
    pathex=["py"],
    binaries=[],
    datas=[],
    hiddenimports=["win32api", "win32con"],
    hookspath=[],
    runtime_hooks=[],
    excludes=["tkinter", "unittest", "email", "html", "http", "xml", "pydoc"],
    win_no_prefer_redirects=False,
    win_private_assemblies=True,
    cipher=block_cipher,
    noarchive=False
)

pyz = PYZ(
    a.pure,
    a.zipped_data,
    cipher=block_cipher
)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name="{0}",
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False
)
'@ -f $py_name
          
          $spec_content | Out-File -Encoding UTF8 "$py_name.spec"
          
          try {
            # 构建原始版本
            Write-Host "Building original version..."
            pyinstaller --clean "$py_name.spec" --distpath="exe/original"
            
            # 构建压缩版本
            Write-Host "Building compressed version..."
            pyinstaller --clean "$py_name.spec" --upx-dir="." --distpath="exe/compressed"
            
            # 验证构建结果
            $exe_orig = "exe/original/$py_name.exe"
            $exe_comp = "exe/compressed/$py_name.exe"
            
            if (-not(Test-Path $exe_orig) -or -not(Test-Path $exe_comp)) {
              throw "Build failed: EXE files not generated"
            }
            
            # 输出文件大小对比
            $size_orig = (Get-Item $exe_orig).length/1MB
            $size_comp = (Get-Item $exe_comp).length/1MB
            Write-Host "File size comparison:"
            Write-Host "Original: $([math]::Round($size_orig, 2)) MB"
            Write-Host "Compressed: $([math]::Round($size_comp, 2)) MB"
            Write-Host "Compression ratio: $([math]::Round(($size_orig-$size_comp)/$size_orig*100, 1))%"
            
          } catch {
            Write-Host "Error building $py_name : $_"
            exit 1
          }
        }
      shell: pwsh
